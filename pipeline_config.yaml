## Execution flow parameters
run_preprocess: true # default false
run_train: true # default false
run_knee_discovery: true # default false
generate_report: true # default false
#
#
# Global parameters
#

# Path to the top-level directory
# Can be full path, or relative to the execution directory
# Default is "../"
top_dir: "../"

# Path to the input data directory
# Can be full path, or relative to the execution directory
# Default is "xview_dataset_raw" under top_dir
input_dir: "../xview_dataset_raw"

# Path to the output directory
# Can be full path, or relative to the execution directory
# Default is "output" under top_dir
output_dir: "../output"

# Deletes the output directory
# Default false, deletes the output_dir directory at beginning of pipeline run
run_clean: false

# Path to the data configuration file
# REQUIRED, either absolute path or based in topdir
data_config_filename: "data_config.yaml"

# Subdirectory containing the input images
# REQUIRED subdir below input_dir, defaults to ''
#   (in which case the images are in input_dir directly)
input_images_subdir: "./"

# Path to the input image labels
# REQUIRED inside input_dir
input_images_labels_filename: "xView_train.geojson"

# Path to the class labels file
# REQUIRED inside input_dir
input_class_labels_filename: "xview_class_labels.json"

# Model configuration
# REQUIRED name entry from models: in this file
model: "yolov8m"

# Instructs all modules to use CUDA if available
# Default is false
use_cuda: true

# Location to save finetuned models, can be absolute path or under top_dir
# Default is 'finetuned_models'
trained_models_subdir: "finetuned_models"

# Pixel size in meters
# REQUIRED
pixel_size: 0.3

# Preprocessing method
# REQUIRED but "tiling" only preprocessing method supported at this time
preprocess_method: "tiling"

# Set of target labels to do detection on
# REQUIRED
target_labels:
    11: 'Fixed-wing Aircraft'
    12: 'Small Aircraft'
    13: 'Cargo Plane'
    15: 'Helicopter'
    # 17: 'Passenger Vehicle'
    # 18: 'Small Car'
    # 19: 'Bus'
    # 20: 'Pickup Truck'
    # 21: 'Utility Truck'
    # 23: 'Truck'
    # 24: 'Cargo Truck'
    # 25: 'Truck w/Box'
    # 26: 'Truck Tractor'
    # 27: 'Trailer'
    # 28: 'Truck w/Flatbed'
    # 29: 'Truck w/Liquid'
    # 32: 'Crane Truck'
    # 33: 'Railway Vehicle'
    # 34: 'Passenger Car'
    # 35: 'Cargo Car'
    # 36: 'Flat Car'
    # 37: 'Tank Car'
    # 38: 'Locomotive'
    # 40: 'Maritime Vessel'
    # 41: 'Motorboat'
    # 42: 'Sailboat'
    # 44: 'Tugboat'
    # 45: 'Barge'
    # 47: 'Fishing Vessel'
    # 49: 'Ferry'
    # 50: 'Yacht'
    # 51: 'Container Ship'
    # 52: 'Oil Tanker'
    # 53: 'Engineering Vehicle'
    # 54: 'Tower crane'
    # 55: 'Container Crane'
    # 56: 'Reach Stacker'
    # 57: 'Straddle Carrier'
    # 59: 'Mobile Crane'
    # 60: 'Dump Truck'
    # 61: 'Haul Truck'
    # 62: 'Scraper/Tractor'
    # 63: 'Front loader/Bulldozer'
    # 64: 'Excavator'
    # 65: 'Cement Mixer'
    # 66: 'Ground Grader'
    # 71: 'Hut/Tent'
    # 72: 'Shed'
    # 73: 'Building'
    # 74: 'Aircraft Hangar'
    # 76: 'Damaged Building'
    # 77: 'Facility'
    # 79: 'Construction Site'
    # 83: 'Vehicle Lot'
    # 84: 'Helipad'
    # 86: 'Storage Tank'
    # 89: 'Shipping container lot'
    # 91: 'Shipping Container'
    # 93: 'Pylon'
    # 94: 'Tower'

# Module-specific parameters

##################################
# Preprocessing Module
##################################
preprocess:

  # Final output directory destination of preprocessed data
  # REQUIRED, can be full path, or path relative to top_dir
  output_subdir: "preprocessed_datasets/data"

  # Interim staging directory for preprocessed data
  # REQUIRED, can be full path, or path relative to top_dir
  interim_subdir: "preprocessed_datasets/interim"

  # Filename for filtered labels
  # REQUIRED, can be full path, or path relative to preoprocess:output_subdir
  filtered_labels_filename: "filtered_labels.json"

  # Delete preprocess:output_subdir before preprocessing
  # Default is false
  clean_subdir: true

  # Proportion of data used for training.
  # REQUIRED
  train_split: 0.8

##################################
# Training Module
##################################

train:

  # Final output directory destination for the model
  #   (see trained_model_filename in model section)
  # REQUIRED, subdirectory from global output_dir
  output_subdir: "results"

  # Where to store the hyperparmeters used to create the trained model
  # Default is "hyperparams.csv"
  hyperparameters_filename: "hyperparams.csv"

  # Use the Fractional Factorial method of grid search for hyperparameter tuning
  # Default is false
  fractional_factorial: true # default false

##################################
# Knee Discovery Module
##################################

knee_discovery:

  # Final output directory destination for the eval_results_filename below
  # REQUIRED, subdirectory from global output_dir
  output_subdir: "results"

  # Delete the knee_discovery output_subdir subdirectory prior to running
  #   knee discovery
  # Default is false
  clean_subdir: true

  # Cache in memory the results to improve performance
  # Default is false
  cache_results: true

  # File to store accumulative evaluation results
  # REQUIRED, subdir from knee_discovery output_subdir
  eval_results_filename: "irpc_results.csv"

  # Inclusive knee search range of the fraction of the original resolution,
  #   rounded up to an integer number of pixels
  # REQUIRED
  search_resolution_range: [0.05, 1.0]

  # Step size for the resolution search
  # REQUIRED
  search_resolution_step: 0.05

  # Divisor for spline interpolation in knee discovery
  # Default is 5, must be a whole positive integer
  # Example: If search_resolution_step is 0.05, and
  #  knee_resolution_interpolation_divisor is 5, then
  #  the granularity of the fitted spline of the curve is (0.05 / 5) = 0.01
  knee_resolution_interpolation_divisor: 5

  # Knee resolution granularity for final interpolation
  # This sets the granularity for the knee,
  #   in the step after spline interpolation
  # Default is the value for search_resolution_step
  # Example: if knee_resolution_granularity is 0.05, then the knee will always
  #   be found at a fraction that is rounded off to the nearest 0.05 multiple
  knee_resolution_granularity: 0.05

##################################
# Report Module
##################################

report:

  # Final output directory destination for the reports
  # REQUIRED, subdirectory from global output_dir
  output_subdir: "reports"

  # Delete the report output_subdir directory
  #   prior to running the report generator
  # Default is false
  # Note: If false, then each pipeline run will be stored
  #   in a separate subdirectory (name is a timestamp) below output_subdir.
  clean_subdir: false

  # Name of the generated PDF report file
  # REQUIRED, filename under report:output_subdir
  report_filename: 'generated_report.pdf'

  # Number of curves on each displayed graph
  # Default is 5
  # If this number is less than the number of target labels,
  #   filtered by display_labels, then more than one graph will appear
  curves_per_graph: 3

# Object classes to display in the generated report.
# If this list is specified, only the classes listed here will appear
#   in the report, even if the pipeline processed additional classes.
# Default: If not specified, the report includes all target labels
#   processed by the pipeline.
# Example usage:
# display_labels:
#   - 'Fixed-wing Aircraft'
#   - 'Small Aircraft'
#   - 'Cargo Plane'
#   - 'Helicopter'

##################################
# Preprocess Methods
##################################

preprocess_methods:

  # Tiling parameters section, tiling is the only method supported currently
  # REQUIRED
  # At least one method MUST be specified and MUST match the
  #   global preprocess_method: keyword above
  tiling:

    # Square size of image tiles
    # REQUIRED
    # Note: For best performance, should be equal to the input image size for
    #   the model
    image_size: 640

    # Overlap between tiles, to capture bounding boxes the would
    # otherwise be across tiles
    # REQUIRED
    stride: 100

    # these following directories are subdir from preprocess:output_subdir

    # Subdirectory to store the baseline training set tiled images
    # REQUIRED
    train_baseline_subdir: "baseline/train/tiling/{maxwidth}_{maxheight}/{stride}"

    # Subdirectory to store the baseline test set tiled images
    # REQUIRED
    val_baseline_subdir: "baseline/val/tiling/{maxwidth}_{maxheight}/{stride}"

    # Subdirectory to store the degraded training set tiled images
    #   one directory for each effective width and height
    # REQUIRED
    train_degraded_subdir: "degraded/train/tiling/{maxwidth}_{maxheight}/{stride}/{effective_width}_{effective_height}"

    # Subdirectory to store the degraded test set tiled images
    #   one directory for each effective width and height
    # REQUIRED
    val_degraded_subdir: "degraded/val/tiling/{maxwidth}_{maxheight}/{stride}/{effective_width}_{effective_height}"

    # String to append to the filename of the tiled image
    #   to make each tiled image filename unique
    # REQUIRED
    output_basename_append: "_{left_pixel_offset}_{top_pixel_offset}_{right_pixel_offset}_{bottom_pixel_offset}"

    # Subdirectory to store the hyperparameter tuning training set
    # REQUIRED
    train_hyperparameter_subdir: "hyperparameter_tuning/train/tiling/{maxwidth}_{maxheight}/{stride}"

    # Subdirectory to store the hyperparameter tuning validation set
    # REQUIRED
    val_hyperparameter_subdir: "hyperparameter_tuning/val/tiling/{maxwidth}_{maxheight}/{stride}"

##################################
# ML Models
##################################

models:

  # Name/ID of the model
  # REQUIRED
  # At least one model MUST be specified and
  #   MUST match the glbal model: keyword above
  yolov8m:

    # Name of the model
    # REQUIRED, for a YOLO model, must start with the string "yolo"
    name: "yolov8m"

    # ID for the pretrained model
    # For YOLO, this is the identifier of the pretrained weights to use
    #   if no pretrained model weights file is found. This will trigger
    #   a warning message.
    # Note: You cannot use the pretrained weights without being fine-tuned,
    #   unless the labels match precisely the labels for the pretrained model
    #   weights. Even when that is the case, it is strongly recommended that
    #   a new model be fine-tuned.
    pretrained_id: "yolov8m"

    # File path to save the fine-tuned model.
    # REQUIRED
    trained_model_filename: "yolov8m/model.pt"

    # Enables cacheing for evaluation
    # Default is false
    use_eval_cache: true

    # The hyperparameter grid for fine-tuning
    # Each parameter is expressed as a list, and if it's a list of one item,
    #   it is not varied.
    # If all hyperparmeters are a list of one,
    #   then the set of hyperparameters is fixed and not varied
    hyperparameters:

      # The input image size, square, for training.
      # Allowed values are 640, 1280, and 2560. 640 is recommended.
      #   Best if matches image_size for preprocessing
      # Default is [640]
      imgsz: [640]

      # Class confidence loss gain (weight multiplier) in the loss function
      # Must be a positive value. 1.5 is recommended.
      # Default is [1.0]
      cls: [1.5]

      # Batch size for training. 16 is recommended.
      # Default is typically [16] but can vary by GPU memory and dataset size
      batch: [16]

      # Number of epochs of training. 100 is recommended.
      # Default is [100]
      epochs: [100]

      # Layers of YOLO's CNN-based architecture to freeze in fine-tuning.
      # The following freezes the first 15 layers.
      # Default is no layer is frozen.
      freeze: [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]]

      # Other popular paramaters listed here but not specified (uses defaults)
      # lr0: [0.01, 0.005, 0.001]
      # momentum: [0.8, 0.95]
